# -*- coding: utf-8 -*-
"""Analisis_de_datos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JkQfJgaaJH6zCq2-AQ66LZbyuoHUYad_

#Importando base de datos
"""

import pandas as pd

pd.read_csv('credit_card.csv')

datos = pd.read_csv('credit_card.csv')

datos.head()

datos.info()

"""#Traduciendo variables"""

datos.columns

dic_columns = {
    'LIMIT_BAL' : 'limite',
    'CHECKING_ACCOUNT' : 'cuenta_corriente',
    'EDUCATION' : 'escolaridad',
    'MARRIAGE' : 'estado_civil',
    'AGE' : 'edad',
    'BILL_AMT' : 'valor_factura',
    'PAY_AMT' : 'valor_pago',
    'DEFAULT' : 'moroso'
}

tarjetas = datos.rename(columns = dic_columns)

tarjetas.head()

tarjetas.cuenta_corriente.unique()

dic_cuenta = {
    'Yes' : 'Si',
    'No' : 'No'
}

tarjetas.cuenta_corriente.map(dic_cuenta)

tarjetas.head()

tarjetas.cuenta_corriente = tarjetas.cuenta_corriente.map(dic_cuenta)

tarjetas.head()

tarjetas.escolaridad.unique()

dic_escolaridad = {
   '2.University' : '2.Universidad', 
   '3.Graduate School' : '3.Pos-graduacion', 
   '1.High School' : '1.Colegio'
}

tarjetas.escolaridad = tarjetas.escolaridad.map(dic_escolaridad)

tarjetas.head()

tarjetas.estado_civil.unique()

dic_estado_civil = {
    'Married' : 'Casado/a',
    'Single' : 'Soltero/a'
}

tarjetas.estado_civil = tarjetas.estado_civil.map(dic_estado_civil)

tarjetas.head()

"""#Importando Seaborn"""

import seaborn as sns

!pip show seaborn

tarjetas.shape

tarjetas.head()

"""#Analisis I"""

sns.distplot(tarjetas['limite'])  #realizando un grafico de distribucion con seaborn

sns.displot(data=tarjetas, x='limite') #mismo grafico de distribucion que el de arriba solo que con una funcion no deprecada (usar esta funcion)

sns.displot(data=tarjetas, x='limite'); #con el ; elimino el titulo de informacion que tiene

sns.displot(data=tarjetas, x='limite', hue='escolaridad'); #lo mismo que arriba solo que comparando las distintas escolaridades

"""#Analisis 2"""

#vamos a tratar de ver el porcentaje del limite disponible que fue usado por cada persona... iu en los bancos significa indice de uso, o porcentaje de uso sobre el limite

tarjetas['iu'] = tarjetas['valor_factura'] / tarjetas['limite']

tarjetas.head()

sns.displot(data= tarjetas, x='iu');

"""Hay un publico significativo que usa poco del limite que tienen disponible

#Estilos y colores
"""

sns.set_style('whitegrid') #da un fondo de cuadricula blanco al grafico          sns.set_style('white') es el estilo por defecto

sns.displot(data=tarjetas, x='limite', hue='escolaridad');

sns.set_style('darkgrid') #da un fondo de cuadricula oscuro al grafico

sns.displot(data=tarjetas, x='limite', hue='escolaridad');

sns.displot(data=tarjetas, x='limite', hue='escolaridad', palette='inferno_r');  #con el atributo palette puedo cambiar los colores y con _r invierte los colores en la misma paleta

"""#Analisis de variables categoricas"""

tarjetas.head()  #las variables categoricas que tenemos son cuenta_corriente, escolaridad y estado_civil

sns.countplot(data= tarjetas, x='cuenta_corriente');

"""vemos que hay mas personas con cuenta_corriente y tarjeta (aprox 850) que personas solo con tarjeta(650 aprox)"""

sns.countplot(data= tarjetas, x='cuenta_corriente', hue='moroso', palette='coolwarm');

"""vemos que el numero de morosos es similar entre las personas que tienen o no cuenta corriente, pero si hacemos un porcentaje veremos que el procentaje de morosos sin cuenta es mayor"""

sns.catplot(data= tarjetas, x='estado_civil', y='limite');

"""no hay diferencia significativa entre los limites entre las personas solteras o casadas"""

sns.catplot(data= tarjetas, x='estado_civil', y='limite', hue='moroso', dodge= True); #con dodge=True separa para poder visualizar mejor lo de hue en este caso

"""parece ser que las personas morosas tienen mas limite al estar casadas, de cierta forma las personas morosas tienen limites mas bajos al ser solteros (?)"""

sns.swarmplot(data= tarjetas, x='escolaridad', y='iu');

"""podemos ver que las personas con escolaridad colegio tienen dos picos marcados de porcentajes de consumo, uno muy bajo y el otro cercado al 1 que seria 100% de uso respecto al limite
podemos ver que las personas con escolaridad universidad estan mas distribuidas, podemos ver que hay un pico entre 0 y 20% y dsps otro entre 80 y 100%
podemos ver que las personas con escolaridad pos-graduacion tiene un pico significativo entre 0 y 20% y otro pico casi en 100%
"""

sns.boxplot(data= tarjetas, x='escolaridad', y='iu');

"""podemos ver claramente las medias de iu, y vemos que a medida que aumenta la escolaridad los indices de iu disminuyen, puede ser porque tienen un limite mas alto o por otros factores"""

sns.boxplot(data= tarjetas, x='escolaridad', y='iu', hue= 'moroso', palette='bone');

"""vemos que en cada grupo la media de las personas morosas es mas alta de las personas que no lo son, y notamos que las personas morosas tienden a usar mas su limite de credito ya que tienen iu mas altos"""

sns.violinplot(data= tarjetas, x='escolaridad', y='iu');  #violinplot se usa porque nos permite ver bien la distribucion de las variables dentro de las columnas

"""el punto blanco representa la media, nos muestra lo mismo que los otros graficos"""

sns.violinplot(data= tarjetas, x='escolaridad', y='iu', hue='moroso', palette='bone');

"""podemos ver que la concentracion de morosos es mucho mas elevada en el grupo colegios con iu altos"""

tarjetas.head()

"""sera que las personas con mas edad tendran un limite mas alto?"""

tarjetas.edad.unique()

bins = [20, 30, 40, 50, 100]                           #armando los rangos de edad para poder analizar, debido a que no seria practico analizar una por una cada edad
nombres = ['20-30', '30-40', '40-50', '50+']

tarjetas['rango_edad'] = pd.cut(tarjetas['edad'], bins, labels= nombres)

tarjetas.head()

sns.boxplot(data= tarjetas, x='rango_edad', y='limite');

"""podemos ver que las personas con mayor limite son las del rango 30-40 y las que tienen menor limite son las del rango 20-30

#Analisis de variables numericas

##graficos de distribucion
"""

tarjetas.head()

sns.displot(data=tarjetas, x='limite');

sns.displot(data=tarjetas, x='limite', hue='escolaridad');

sns.displot(data=tarjetas, x='limite', col='escolaridad')

sns.displot(data=tarjetas, x='limite', col='escolaridad', kind='kde'); #con col lo que hace es crear un grafico diferente para cada tipo de escolaridad y kind='kne' nos hace la curva

sns.displot(data=tarjetas, x='limite', col='escolaridad', kind='kde', hue='moroso');

"""notamos como la morosidad tiene limites mas altos en la escolaridad universidad y pos-graduacion que en escuela"""

sns.displot(data=tarjetas, x='limite', col='escolaridad', kind='kde', hue='rango_edad');

"""podemos ver que en universidad las personas con rango de edad entre 30 y 40 tienen dos picos en limite siendo el mas alto alrededor de 70000, y en pos-graduacion tambien es parecido

##graficos de dispersion
"""

sns.scatterplot(data=tarjetas, x='iu', y='valor_factura');

"""vemos que a medida que aumenta el valor de la factura aumenta el indice de uso"""

sns.scatterplot(data=tarjetas, x='iu', y='valor_factura', hue='cuenta_corriente');

"""podemos ver que las personas que no tienen cuenta corriente son los que tienen valor de factura mas altos"""

sns.lmplot(data=tarjetas, x='iu', y='valor_factura'); #grafico de regresion

"""la linea que se ve es la linea de tendencia, podemos ver que la relacion entre ambas variables es directamente proporcional

#Test de hipotesis
"""

sns.lmplot(data=tarjetas, x='iu', y='valor_factura', col='moroso');

"""vemos que las lineas de regresion son parecidas en ambos casos pero cambia la inclinacion, vamos a ver si la diferencia es estadisticamente significativa"""

from scipy.stats import ranksums

"""H<sup>null<sup>

La distribucion de los grupos morosos y no morosos es la misma

H<sup>alt<sup>

La distribucion de los grupos morosos y no morosos NO es la misma
"""

moroso = tarjetas.query("moroso == 1").valor_factura

moroso

no_moroso = tarjetas.query("moroso == 0").valor_factura

no_moroso

resultado = ranksums(moroso, no_moroso)

resultado

"""como el pvalor es aprox 1% (y al ser menor al 5%) aceptamos la hipotesis alternativa y podemos decir que hay diferencia significativa entre ambas distribuciones. Dado que nuestro p-value es menor a 0.05 podemos entender que nuestro resultado es estadísticamente significativo y podemos aceptar la hipótesis alternativa."""

print('El p_value de nuestro test es {} lo que en este caso nos permite aceptar la hipotesis alternativa'.format(resultado.pvalue))

"""#Jointplot"""

tarjetas.head()

sns.jointplot(data= tarjetas, x='edad', y='limite');   #jointplot muestra la dispersion y el histograma

"""podemos observar que el pico de edad esta en la edad de 30 aprox pero que hay una cantidad significativa de usuarios entre 20 y 30 años y que el pico de limite esta en 20000 aprox"""

sns.jointplot(data= tarjetas, x='edad', y='limite', kind= 'kde'); #alterando el estilo con kind

sns.jointplot(data= tarjetas, x='edad', y='limite', kind= 'hex'); #alterando el estilo con kind

"""en los puntos mas oscuros es donde tenemos mas concentracion"""

sns.jointplot(data= tarjetas, x='edad', y='limite', kind= 'kde', hue='moroso'); #agregando moroso al grafico

"""podemos ver que hay una concentracion de morosos entre 20 y 30 años con un limite de consumo bajo

#Pairplot
"""

tarjetas.describe()

sns.pairplot(data=tarjetas);

sns.pairplot(data=tarjetas, hue='escolaridad', palette='cividis'); #abriendo con otra variable, ej escolaridad

tarjetas.to_csv('tarjetas_final.csv')

